{"version":3,"sources":["logo.svg","synergy_champ.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Synergy","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","dataLink","champ","cost","champData","frameClass","react_default","a","createElement","class","src","alt","keys","originData","classData","champList","currentState","champInfo","origin","classes","classIndex","toLowerCase","champClass","efficientSynergy","synergy","console","log","bonus","diff","_this2","id","synergySortChamps","possibleSynergy","map","champDetail","index","colorCodeCost","React","Component","App","className","src_synergy_champ","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6niCAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,mOC6LzBC,cAlLX,SAAAA,EAAaC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACTC,SAAW,gEAHAR,6EAQLS,GAEV,IAAIC,EAAOC,EAAUF,GAAV,KACPG,EAAa,cAgBjB,OAfa,IAATF,EACAE,GAAc,SAEF,IAAPF,EACLE,GAAc,SAEF,IAAPF,EACLE,GAAc,SAEF,IAAPF,EACLE,GAAc,SAEF,IAAPF,IACLE,GAAc,UAGdC,EAAAC,EAAAC,cAAA,OAAKC,MAAOJ,EACZK,IAAOd,KAAKI,MAAMC,SAAWC,EAAQ,OACrCS,IAAOT,gDAKGR,OAAOkB,KAAKC,GAMZnB,OAAOkB,KAAKE,2CAIdC,GACZ,IAAIC,EAAe,GAEnB,IAAI,IAAId,KAASa,EAAU,CACvB,IAAIE,EAAYb,EAAUW,EAAUb,IAChCgB,EAASD,EAAS,OAClBE,EAAUF,EAAS,MAEvB,IAAI,IAAIG,KADRJ,EAAaE,EAAO,GAAGG,gBAAkBL,EAAaE,EAAO,GAAGG,gBAAgB,GAAI,EAC9DF,EAAQ,CAC1B,IAAIG,EAAaH,EAAQC,GACzBJ,EAAaM,EAAWD,gBAAkBL,EAAaM,EAAWD,gBAAgB,GAAG,GAO7F,IAAIE,EAAmB,GAEvB,IAAK,IAAIC,KAAWR,EAEhB,GADAS,QAAQC,IAAIF,GACPA,KAAWX,EAOZ,IAAI,IAAIc,KAASd,EAAWW,GAAX,QACbC,QAAQC,IAAIC,QAPhB,IAAK,IAAIA,KAASb,EAAUU,GAAV,QAA8B,CAC5CC,QAAQC,IAAIC,GACZ,IAAIC,EAAOd,EAAUU,GAAV,QAA8BG,GAA9B,OAA+CX,EAAaQ,GACvED,EAAiBC,GAAWI,EAWxCH,QAAQC,IAAIH,oCAMR,IAAAM,EAAAjC,KACJ,OACIU,EAAAC,EAAAC,cAAA,OAAKC,MAAQ,sBAAsBqB,GAAK,gBACpCxB,EAAAC,EAAAC,cAAA,OAAKC,MAAQ,gBACRb,KAAKmC,oBACLnC,KAAKoC,gBAAgB,CAAC,OAAO,SAAS,WAAW,cAClD1B,EAAAC,EAAAC,cAAA,OAAKC,MAAM,qBACNf,OAAOkB,KAAKR,GAAW6B,IAAI,SAACC,EAAYC,GACrC,OACI7B,EAAAC,EAAAC,cAAA,WACKqB,EAAKO,cAAcF,gBAnGlCG,IAAMC,WCYbC,MAff,WACE,OAEEjC,EAAAC,EAAAC,cAAA,OAAKgC,UAAU,OAEblC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAAA,OAAKgC,UAAY,WACblC,EAAAC,EAAAC,cAACiC,EAAD,UCFMC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO1C,EAAAC,EAAAC,cAACyC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.2ecc0cd3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport './synergy_champ.css';\r\n\r\nimport champData from './jsonData/champions.json';\r\nimport classData from './jsonData/classes.json';\r\nimport originData from './jsonData/origins.json';\r\n\r\n\r\n\r\nclass Synergy extends React.Component {\r\n\r\n    constructor (props){\r\n        super(props);\r\n        this.state = {\r\n            dataLink : 'https://ddragon.leagueoflegends.com/cdn/9.12.1/img/champion/'\r\n        }\r\n    }\r\n\r\n\r\n    colorCodeCost(champ){\r\n\r\n        var cost = champData[champ][\"cost\"];\r\n        var frameClass = 'champ-Frame';\r\n        if (cost === 1){\r\n            frameClass += ' cost1'\r\n        }\r\n        else if (cost===2) {\r\n            frameClass += ' cost2'\r\n        }\r\n        else if (cost===3) {\r\n            frameClass += ' cost3'\r\n        }\r\n        else if (cost===4) {\r\n            frameClass += ' cost4'\r\n        }\r\n        else if (cost===5) {\r\n            frameClass += ' cost5'\r\n        }\r\n        return (\r\n            <img class={frameClass}\r\n            src = {this.state.dataLink + champ + '.png'}\r\n            alt = {champ} />\r\n        )\r\n    }\r\n\r\n    synergySortChamps(){\r\n        var origins = Object.keys(originData);\r\n\r\n\r\n\r\n\r\n\r\n        var classes = Object.keys(classData);\r\n\r\n    }\r\n\r\n    possibleSynergy(champList){\r\n        var currentState = {};\r\n        //console.log(champList);\r\n        for(var champ in champList){\r\n            var champInfo = champData[champList[champ]];\r\n            var origin = champInfo[\"origin\"];\r\n            var classes = champInfo[\"class\"];\r\n            currentState[origin[0].toLowerCase()] = (currentState[origin[0].toLowerCase()]||0) +1;\r\n            for(var classIndex in classes){\r\n                var champClass = classes[classIndex];\r\n                currentState[champClass.toLowerCase()] = (currentState[champClass.toLowerCase()]||0)+1;\r\n            }\r\n        }\r\n        //console.log(currentState);\r\n\r\n        //var mostSyn = Object.keys(currentState).reduce((a,b)=>currentState[a]>currentState[b] ? a:b);\r\n\r\n        var efficientSynergy = {};\r\n\r\n        for( var synergy in currentState){\r\n            console.log(synergy)\r\n            if(!(synergy in originData)){\r\n                for (var bonus in classData[synergy][\"bonuses\"]){\r\n                    console.log(bonus)\r\n                    var diff = classData[synergy][\"bonuses\"][bonus][\"needed\"]-currentState[synergy]\r\n                    efficientSynergy[synergy] = diff;\r\n                }\r\n            }else {\r\n                for(var bonus in originData[synergy][\"bonuses\"]){\r\n                    console.log(bonus)\r\n                }\r\n            }\r\n            // for (var bonus in originData[synergy.toLowerCase()][\"bonuses\"]){\r\n            //     console.log(bonus)\r\n            // }\r\n        }\r\n        console.log(efficientSynergy)\r\n\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div class = \"synergy-champ-table\" id = \"synergy-list\">\r\n                <div class = \"synergy-type\">\r\n                    {this.synergySortChamps()}\r\n                    {this.possibleSynergy([\"Shen\",'Aatrox','Kassadin','Gangplank'])}\r\n                    <div class=\"synergy container\">\r\n                        {Object.keys(champData).map((champDetail,index)=>{\r\n                            return (\r\n                                <div>\r\n                                    {this.colorCodeCost(champDetail)}\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            //\r\n            //\r\n            // <div class=\"tab-pane fade show active\" id=\"synergy-list\" role=\"tabpanel\"\r\n            //      aria-labelledby=\"synergy-list-tab\">\r\n            //     <div class=\"originContainer\">\r\n            //         <div class=\"originItems originItems-void originId-12\"\r\n            //          data-id=\"12\"\r\n            //          data-key=\"void\">\r\n            //\r\n            //             <div class=\"origin\">\r\n            //                 <div class=\"tft-champion tft-champion--44 tft-champion--off cost-1 champion champion-kassadin \"\r\n            //                      data-key=\"kassadin\"\r\n            //                      data-origins=\"12\"\r\n            //                      data-classes=\"5\"\r\n            //                      data-toggle=\"tooltip\" data-placement=\"bottom\"\r\n            //                      data-tooltip-url=\"https://lolchess.gg/tooltip/champion/Kassadin\">\r\n            //                     <img src=\"//ddragon.leagueoflegends.com/cdn/9.12.1/img/champion/Kassadin.png\" alt=\"카사딘\" />\r\n            //                     <span class=\"cost\">$1</span>\r\n            //                     <span class=\"name\">카사딘</span>\r\n            //                 </div>\r\n            //                 <div class=\"tft-champion tft-champion--44 tft-champion--off cost-1 champion champion-khazix \"\r\n            //                      data-key=\"khazix\"\r\n            //                      data-origins=\"12\"\r\n            //                      data-classes=\"4\"\r\n            //                      data-toggle=\"tooltip\" data-placement=\"bottom\"\r\n            //                      data-tooltip-url=\"https://lolchess.gg/tooltip/champion/Khazix\">\r\n            //                     <img src=\"//ddragon.leagueoflegends.com/cdn/9.12.1/img/champion/Khazix.png\" alt=\"카직스\" />\r\n            //                     <span class=\"cost\">$1</span>\r\n            //                     <span class=\"name\">카직스</span>\r\n            //                 </div>\r\n            //                 <div class=\"tft-champion tft-champion--44 tft-champion--off cost-2 champion champion-reksai \"\r\n            //                      data-key=\"reksai\"\r\n            //                      data-origins=\"12\"\r\n            //                      data-classes=\"9\"\r\n            //                      data-toggle=\"tooltip\" data-placement=\"bottom\"\r\n            //                      data-tooltip-url=\"https://lolchess.gg/tooltip/champion/RekSai\">\r\n            //                     <img src=\"//ddragon.leagueoflegends.com/cdn/9.12.1/img/champion/RekSai.png\" alt=\"렉사이\" />\r\n            //                     <span class=\"cost\">$2</span>\r\n            //                     <span class=\"name\">렉사이</span>\r\n            //                 </div>\r\n            //                 <div class=\"tft-champion tft-champion--44 tft-champion--off cost-4 champion champion-chogath \"\r\n            //                      data-key=\"chogath\"\r\n            //                      data-origins=\"12\"\r\n            //                      data-classes=\"9\"\r\n            //                      data-toggle=\"tooltip\" data-placement=\"bottom\"\r\n            //                      data-tooltip-url=\"https://lolchess.gg/tooltip/champion/Chogath\">\r\n            //                     <img src=\"//ddragon.leagueoflegends.com/cdn/9.12.1/img/champion/Chogath.png\" alt=\"초가스\" />\r\n            //                     <span class=\"cost\">$4</span>\r\n            //                     <span class=\"name\">초가스</span>\r\n            //                 </div>\r\n            //             </div>\r\n            //         </div>\r\n            //     </div>\r\n            // </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Synergy;\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Synergy from './synergy_champ'\n\nfunction App() {\n  return (\n\n    <div className=\"App\">\n\n      <div>\n          <h3> TFT Possible synergies </h3>\n          <div className = \"synergy\">\n              <Synergy />\n          </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}