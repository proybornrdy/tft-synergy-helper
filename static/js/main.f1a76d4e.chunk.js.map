{"version":3,"sources":["logo.svg","synergy_champ.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Synergy","react_default","a","createElement","class","id","role","aria-labelledby","data-id","data-key","data-origins","data-classes","data-toggle","data-placement","data-tooltip-url","src","alt","React","Component","connect","App","className","synergy_champ","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qIAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,qMCIlCC,mLAEE,OACIC,EAAAC,EAAAC,cAAA,OAAKC,MAAM,4BAA4BC,GAAG,eAAeC,KAAK,WACzDC,kBAAgB,oBACjBN,EAAAC,EAAAC,cAAA,OAAKC,MAAM,mBACPH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,2CACVI,UAAQ,KACRC,WAAS,QAENR,EAAAC,EAAAC,cAAA,OAAKC,MAAM,UACPH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,qFACNK,WAAS,WACTC,eAAa,KACbC,eAAa,IACbC,cAAY,UAAUC,iBAAe,SACrCC,mBAAiB,iDAClBb,EAAAC,EAAAC,cAAA,OAAKY,IAAI,qEAAqEC,IAAI,uBAClFf,EAAAC,EAAAC,cAAA,QAAMC,MAAM,QAAZ,MACAH,EAAAC,EAAAC,cAAA,QAAMC,MAAM,QAAZ,uBAEJH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,mFACNK,WAAS,SACTC,eAAa,KACbC,eAAa,IACbC,cAAY,UAAUC,iBAAe,SACrCC,mBAAiB,+CAClBb,EAAAC,EAAAC,cAAA,OAAKY,IAAI,mEAAmEC,IAAI,uBAChFf,EAAAC,EAAAC,cAAA,QAAMC,MAAM,QAAZ,MACAH,EAAAC,EAAAC,cAAA,QAAMC,MAAM,QAAZ,uBAEJH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,mFACNK,WAAS,SACTC,eAAa,KACbC,eAAa,IACbC,cAAY,UAAUC,iBAAe,SACrCC,mBAAiB,+CAClBb,EAAAC,EAAAC,cAAA,OAAKY,IAAI,mEAAmEC,IAAI,uBAChFf,EAAAC,EAAAC,cAAA,QAAMC,MAAM,QAAZ,MACAH,EAAAC,EAAAC,cAAA,QAAMC,MAAM,QAAZ,uBAEJH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,oFACNK,WAAS,UACTC,eAAa,KACbC,eAAa,IACbC,cAAY,UAAUC,iBAAe,SACrCC,mBAAiB,gDAClBb,EAAAC,EAAAC,cAAA,OAAKY,IAAI,oEAAoEC,IAAI,uBACjFf,EAAAC,EAAAC,cAAA,QAAMC,MAAM,QAAZ,MACAH,EAAAC,EAAAC,cAAA,QAAMC,MAAM,QAAZ,kCAjDVa,IAAMC,WA2DbC,cAASnB,GCpBToB,MArCf,WACE,OACEnB,EAAAC,EAAAC,cAAA,OAAKkB,UAAY,OACbpB,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,OAAKkB,UAAY,WACbpB,EAAAC,EAAAC,cAACmB,EAAD,SCCQC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO5B,EAAAC,EAAAC,cAAC2B,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.f1a76d4e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nclass Synergy extends React.Component {\r\n    render(){\r\n        return(\r\n            <div class=\"tab-pane fade show active\" id=\"synergy-list\" role=\"tabpanel\"\r\n                 aria-labelledby=\"synergy-list-tab\">\r\n                <div class=\"originContainer\">\r\n                    <div class=\"originItems originItems-void originId-12\"\r\n                     data-id=\"12\"\r\n                     data-key=\"void\">\r\n\r\n                        <div class=\"origin\">\r\n                            <div class=\"tft-champion tft-champion--44 tft-champion--off cost-1 champion champion-kassadin \"\r\n                                 data-key=\"kassadin\"\r\n                                 data-origins=\"12\"\r\n                                 data-classes=\"5\"\r\n                                 data-toggle=\"tooltip\" data-placement=\"bottom\"\r\n                                 data-tooltip-url=\"https://lolchess.gg/tooltip/champion/Kassadin\">\r\n                                <img src=\"//ddragon.leagueoflegends.com/cdn/9.12.1/img/champion/Kassadin.png\" alt=\"카사딘\" />\r\n                                <span class=\"cost\">$1</span>\r\n                                <span class=\"name\">카사딘</span>\r\n                            </div>\r\n                            <div class=\"tft-champion tft-champion--44 tft-champion--off cost-1 champion champion-khazix \"\r\n                                 data-key=\"khazix\"\r\n                                 data-origins=\"12\"\r\n                                 data-classes=\"4\"\r\n                                 data-toggle=\"tooltip\" data-placement=\"bottom\"\r\n                                 data-tooltip-url=\"https://lolchess.gg/tooltip/champion/Khazix\">\r\n                                <img src=\"//ddragon.leagueoflegends.com/cdn/9.12.1/img/champion/Khazix.png\" alt=\"카직스\" />\r\n                                <span class=\"cost\">$1</span>\r\n                                <span class=\"name\">카직스</span>\r\n                            </div>\r\n                            <div class=\"tft-champion tft-champion--44 tft-champion--off cost-2 champion champion-reksai \"\r\n                                 data-key=\"reksai\"\r\n                                 data-origins=\"12\"\r\n                                 data-classes=\"9\"\r\n                                 data-toggle=\"tooltip\" data-placement=\"bottom\"\r\n                                 data-tooltip-url=\"https://lolchess.gg/tooltip/champion/RekSai\">\r\n                                <img src=\"//ddragon.leagueoflegends.com/cdn/9.12.1/img/champion/RekSai.png\" alt=\"렉사이\" />\r\n                                <span class=\"cost\">$2</span>\r\n                                <span class=\"name\">렉사이</span>\r\n                            </div>\r\n                            <div class=\"tft-champion tft-champion--44 tft-champion--off cost-4 champion champion-chogath \"\r\n                                 data-key=\"chogath\"\r\n                                 data-origins=\"12\"\r\n                                 data-classes=\"9\"\r\n                                 data-toggle=\"tooltip\" data-placement=\"bottom\"\r\n                                 data-tooltip-url=\"https://lolchess.gg/tooltip/champion/Chogath\">\r\n                                <img src=\"//ddragon.leagueoflegends.com/cdn/9.12.1/img/champion/Chogath.png\" alt=\"초가스\" />\r\n                                <span class=\"cost\">$4</span>\r\n                                <span class=\"name\">초가스</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect (Synergy);\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Synergy from './synergy_champ'\n\nfunction App() {\n  return (\n    <div className = \"App\">\n        <h3> synergy </h3>\n        <div className = \"synergy\">\n            <Synergy />\n        </div>\n    </div>\n\n\n\n\n\n\n\n    // <div className=\"App\">\n    //   <header className=\"App-header\">\n    //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    //     <p>\n    //       Edit <code>src/App.js</code> and save to reload.\n    //     </p>\n    //     <a\n    //       className=\"App-link\"\n    //       href=\"https://reactjs.org\"\n    //       target=\"_blank\"\n    //       rel=\"noopener noreferrer\"\n    //     >\n    //       Learn React\n    //     </a>\n    //   </header>\n    //   <div>\n    //     <h1> TEST </h1>\n    //   </div>\n    // </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}